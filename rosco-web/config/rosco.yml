server:
  port: 8087

rosco:
  configDir: /some/path/to/config/packer
  jobs:
    local:
      timeoutMinutes: 30

spectator:
  applicationName: ${spring.application.name}
  webEndpoint:
    enabled: false

# If a repository is set here, it will be added by packer as repository when baking images for GCE and AWS.
# It is safe to leave this out (or blank) if you do not need to configure your own repository.
# You can specify an apt repository (used when baking debian based images) and/or a yum repository (used when baking an
# rpm based imaged) and/or a chocolatey repository (used when baking a nuget based image).
# You may specify a space separated list repositories per repository type.
# The following commented-out lines are an example of what a valid entry looks like.
# debianRepository: http://dl.bintray.com/spinnaker/ospackages trusty main;http://other.repo.com/repo/packages trusty main
# yumRepository: https://jfrog.bintray.com/yum/repos/some-package
# chocolateyRepository: https://chocolatey.org/api/v2/

defaultCloudProviderType: aws

# When the bakery is configured to use a templateFile in this list,
# /usr/bin/packer will be run as root using 'sudo'.
# By default, spinnaker does not have sudo permissions so these scripts will
# fail.
# In order to give sudo permissions, create and add the following line (without
# leading '#') to /etc/sudoers.d/spinnaker
# spinnaker ALL=(ALL) NOPASSWD: /usr/bin/packer
#
# WARNING: Giving sudo access for spinnaker to execute packer may create an
# opportunity for malicious actors to take control of your machine and data it
# has access to.

templatesNeedingRoot: aws-chroot.json

aws:
  # The property referenced below, AWS_ENABLED, is not set in the
  # 'unified config' supported by the spinnaker/spinnaker project. If you
  # copy/paste this section into a new rosco-local.yml file for use with a
  # pre-built Spinnaker image, make sure to either replace AWS_ENABLED
  # with SPINNAKER_AWS_ENABLED or to explicitly set the property's value
  # to true.
  enabled: ${AWS_ENABLED:false}
  bakeryDefaults:
    awsAssociatePublicIpAddress: true
    # To make use of share_with and copy_to, replace this template with aws-multi-ebs.json.
    # When using aws-multi-ebs.json or aws-multi-chroot.json make sure to set the SPINNAKER_AWS_DEFAULT_ACCOUNT env
    # variable to the account ID of the AWS account the Spinnaker instance is launched in.
    templateFile: aws-ebs.json
    defaultVirtualizationType: hvm
    baseImages:
    # AMIs sourced from: https://cloud-images.ubuntu.com/locator/ec2/
    # Images should be considered placeholders.

    # Packer Spot Pricing #
    #   spotPrice specifies the maximum hourly price to pay for a spot instance to create the AMI.
    #     This can be set to 'auto' to automatically discover the best spot price.
    #     Set to "0" to use an on demand instance (default).
    #   spotPriceAutoProduct is required if spotPrice is set to 'auto'.
    #     This specifies what sort of AMI you're launching to find the best spot price.
    #     This must be one of:
    #        Linux/UNIX
    #        Linux/UNIX (Amazon VPC)
    #        SUSE Linux
    #        SUSE Linux (Amazon VPC)
    #        Windows
    #        Windows (Amazon VPC)

    - baseImage:
        id: ubuntu
        shortDescription: v12.04
        detailedDescription: Ubuntu Precise Pangolin v12.04
        packageType: deb
        # You can specify the templateFile used for this baseImage.
        # If not specified, the default templateFile will be used.
        templateFile: aws-ebs.json
      virtualizationSettings:
      - region: us-east-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-d4aed0bc
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-west-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-4f285a2f
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-west-2
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-59396769
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-east-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-8007b2e8
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-west-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-3a12605a
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
#      No exact equivalent available in us-west-2
#      - region: us-west-2
#        virtualizationType: pv
#        instanceType: m3.medium
#        sourceAmi:
#        sshUserName: ubuntu
#        spotPrice: 0
#        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
    - baseImage:
        id: trusty
        shortDescription: v14.04
        detailedDescription: Ubuntu Trusty Tahr v14.04
        packageType: deb
        # The following AMI ID's were retrieved from here:
        # https://cloud-images.ubuntu.com/locator/ec2/
      virtualizationSettings:
      - region: us-east-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-9d751ee7
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-east-2
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-7960481c
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-west-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-494c4829
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-west-2
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-e8cc6a90
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: eu-central-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-aa30b8c5
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: eu-west-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-fcb43185
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-east-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-a1701bdb
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-west-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-b84347d8
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
      - region: us-west-2
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-61cf6919
        sshUserName: ubuntu
        spotPrice: 0
        spotPriceAutoProduct: Linux/UNIX (Amazon VPC)
    - baseImage:
        id: windows-2012-r2
        shortDescription: 2012 R2
        detailedDescription: Windows Server 2012 R2 Base
        packageType: nupkg
        templateFile: aws-windows-2012-r2.json
        osType: windows
      virtualizationSettings:
      - region: us-east-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-21414f36
        winRmUserName: Administrator
        spotPrice: 0
        spotPriceAutoProduct: Windows (Amazon VPC)


azure:
  # The property referenced below, AZURE_ENABLED, is not set in the
  # 'unified config' supported by the spinnaker/spinnaker project. If you
  # copy/paste this section into a new rosco-local.yml file for use with a
  # pre-built Spinnaker image, make sure to explicitly set the property's
  # value to true.
  enabled: ${AZURE_ENABLED:false}
  bakeryDefaults:
    templateFile: azure-linux.json
    baseImages:
    - baseImage:
        id: ubuntu-1604
        shortDescription: v16.04
        detailedDescription: Ubuntu Server 16.04-LTS
        publisher: Canonical
        offer: UbuntuServer
        sku: 16.04-LTS
        version: 16.04.201612140
        osType: Linux
        packageType: deb
    - baseImage:
        id: ubuntu-1804
        shortDescription: v18.04
        detailedDescription: Ubuntu Server 18.04-LTS
        publisher: Canonical
        offer: UbuntuServer
        sku: 18.04-LTS
        version: 18.04.201804262
        osType: Linux
        packageType: deb
    - baseImage:
        id: ubuntu-1404
        shortDescription: v14.04
        detailedDescription: Ubuntu Server 14.04.5-LTS
        publisher: Canonical
        offer: UbuntuServer
        sku: 14.04.5-LTS
        version: 14.04.201612130
        osType: Linux
        packageType: deb
    - baseImage:
        id: centos
        shortDescription: 7
        detailedDescription: OpenLogic CentOS 7.1.20150731
        publisher: OpenLogic
        offer: CentOS
        sku: 7.1
        version: 7.1.20150731
        osType: Linux
        packageType: rpm
    - baseImage:
        id: windows-2012-r2
        shortDescription: 2012 R2
        detailedDescription: Windows Server 2012 R2 Datacenter
        publisher: MicrosoftWindowsServer
        offer: WindowsServer
        sku: 2012-R2-Datacenter
        version: 4.0.20170111
        osType: windows
        packageType: nupkg
        templateFile: azure-windows-2012-r2.json


docker:
  # The property referenced below, DOCKER_ENABLED, is not set in the
  # 'unified config' supported by the spinnaker/spinnaker project. If you
  # copy/paste this section into a new rosco-local.yml file for use with a
  # pre-built Spinnaker image, make sure to explicitly set the property's
  # value to true.
  enabled: ${DOCKER_ENABLED:false}
  bakeryDefaults:
    targetRepository: ${DOCKER_TARGET_REPOSITORY:}
    templateFile: docker.json
    baseImages:
    - baseImage:
        id: precise
        shortDescription: v12.04
        detailedDescription: Ubuntu Precise Pangolin v12.04
        packageType: deb
      virtualizationSettings:
        sourceImage: ubuntu:precise
    - baseImage:
        id: trusty
        shortDescription: v14.04
        detailedDescription: Ubuntu Trusty Tahr v14.04
        packageType: deb
      virtualizationSettings:
        sourceImage: ubuntu:trusty

google:
  # The property referenced below, GOOGLE_ENABLED, is not set in the
  # 'unified config' supported by the spinnaker/spinnaker project. If you
  # copy/paste this section into a new rosco-local.yml file for use with a
  # pre-built Spinnaker image, make sure to either replace GOOGLE_ENABLED
  # with SPINNAKER_GOOGLE_ENABLED or to explicitly set the property's value
  # to true.
  enabled: ${GOOGLE_ENABLED:false}
  bakeryDefaults:
    zone: us-central1-f
    network: default
    useInternalIp: false
    templateFile: gce.json
    baseImages:
    # Either sourceImage or sourceImageFamily should be set. If both are set, sourceImage will take precedence.
    # If you specify isImageFamily, deck will annotate the popup tooltip to indicate that the selected option
    # represents an image family.
    #
    # This is an example of configuring a source image family:
    # - baseImage:
    #     id: precise
    #     shortDescription: v14.04
    #     detailedDescription: Ubuntu Trusty Tahr v14.04
    #     packageType: deb
    #     isImageFamily: true
    #   virtualizationSettings:
    #     sourceImageFamily: ubuntu-1204-lts
    #
    # This is an example of configuring an explicit source image, as opposed to a source image family:
    # - baseImage:
    #     id: precise
    #     shortDescription: v14.04
    #     detailedDescription: Ubuntu Trusty Tahr v14.04
    #     packageType: deb
    #   virtualizationSettings:
    #     sourceImage: ubuntu-1404-trusty-v20170517
    - baseImage:
        id: trusty
        shortDescription: v14.04
        detailedDescription: Ubuntu Trusty Tahr v14.04
        packageType: deb
        isImageFamily: true
      virtualizationSettings:
        sourceImageFamily: ubuntu-1404-lts
    - baseImage:
        id: xenial
        shortDescription: v16.04
        detailedDescription: Ubuntu Xenial Xerus v16.04
        packageType: deb
        isImageFamily: true
      virtualizationSettings:
        sourceImageFamily: ubuntu-1604-lts

swagger:
  enabled: true
  title: Spinnaker Rosco API
  description:
  contact:
  patterns:
    - /api/v1.*
    - /bakeOptions.*
    - /status.*
