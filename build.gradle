buildscript {
  repositories {
    jcenter()
    maven { url "https://spinnaker.bintray.com/gradle" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker.gradle:spinnaker-dev-plugin:5.2.2'
  }
}

allprojects {
  apply plugin: "spinnaker.base-project"
  apply plugin: "groovy"

  group = "com.netflix.spinnaker.rosco"


  ext {
    spinnakerDependenciesVersion = '1.33.0'
    if (project.hasProperty('spinnakerDependenciesVersion')) {
      spinnakerDependenciesVersion = project.property('spinnakerDependenciesVersion')
    }
  }

  def checkLocalVersions = [spinnakerDependenciesVersion: spinnakerDependenciesVersion]
  if (ext.has('versions')) {
    def extVers = ext.get('versions')
    if (extVers instanceof Map) {
      checkLocalVersions.putAll(extVers)
    }
  }

  def localVersions = checkLocalVersions.findAll { it.value.endsWith('-SNAPSHOT') }
  if (localVersions) {
    logger.info("Enabling mavenLocal repo for $localVersions")
    repositories {
      mavenLocal()
    }
  }

  spinnaker {
    dependenciesVersion = spinnakerDependenciesVersion
  }

  configurations.all {
    resolutionStrategy {
      force 'org.apache.httpcomponents:httpclient:4.3.5'
      force 'org.apache.httpcomponents:httpcore:4.3.2'
    }
    exclude group: 'javax.servlet', module: 'servlet-api'
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "org.mortbay.jetty", module: "servlet-api"
  }

  dependencies {
    spinnaker.group("test")
    compile spinnaker.dependency("bootActuator")
    compile spinnaker.dependency("groovy")
    compile spinnaker.dependency("korkSwagger")
    compile spinnaker.dependency("spectatorReg")
    compile spinnaker.dependency("korkArtifacts")
  }
  test {
    testLogging {
      exceptionFormat = 'full'
    }
  }

  tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
      jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8187'
    }
  }

  //c&p this because NetflixOss reverts it to 1.7 and ends up getting applied last..
  project.plugins.withType(JavaBasePlugin) {
    JavaPluginConvention convention = project.convention.getPlugin(JavaPluginConvention)
    convention.sourceCompatibility = JavaVersion.VERSION_1_8
    convention.targetCompatibility = JavaVersion.VERSION_1_8
  }
}
task listrepos {
    doLast {
        println "Repositories:"
        project.repositories.each { println "Name: " + it.name + "; url: " + it.url }
   }
}

defaultTasks ':rosco-web:run'
