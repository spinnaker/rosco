buildscript {
  repositories {
    jcenter()
    maven { url "https://spinnaker.bintray.com/gradle" }
    maven { url "https://plugins.gradle.org/m2/" }
    if (spinnakerGradleVersion.endsWith("-SNAPSHOT")) {
      mavenLocal()
    }
  }
  dependencies {
    classpath "com.netflix.spinnaker.gradle:spinnaker-dev-plugin:$spinnakerGradleVersion"
    if (Boolean.valueOf(enablePublishing)) {
      classpath "com.netflix.spinnaker.gradle:spinnaker-gradle-project:$spinnakerGradleVersion"
    }
  }
}

allprojects {
  apply plugin: 'spinnaker.base-project'
  if (Boolean.valueOf(enablePublishing)) {
    apply plugin: 'spinnaker.project'
  }
  apply plugin: "groovy"

  group = "com.netflix.spinnaker.rosco"

  tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
      jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8187'
    }
  }
  configurations.all {
    resolutionStrategy {
      force group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.+' // Remove CVE-2019-17267, CVE-2019-16335, CVE-2019-14540, CVE-2019-14540 and CVE-2019-17531 , upgrade jackson-databind dependency
    }
  }
}

subprojects {
  if (korkVersion.endsWith("-SNAPSHOT")) {
    logger.info("Enabling mavenLocal")
    repositories {
      mavenLocal()
    }
  }

  dependencies {
    implementation platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")

    annotationProcessor platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    testAnnotationProcessor platform("com.netflix.spinnaker.kork:kork-bom:$korkVersion")
    testAnnotationProcessor "org.projectlombok:lombok"
  }

  test {
    testLogging {
      exceptionFormat = 'full'
    }
  }
}

defaultTasks ':rosco-web:run'
